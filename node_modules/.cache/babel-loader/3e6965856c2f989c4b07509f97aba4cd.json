{"ast":null,"code":"import _classCallCheck from\"/Users/macbook/projetos/volanty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/macbook/projetos/volanty/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/macbook/projetos/volanty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/macbook/projetos/volanty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/macbook/projetos/volanty/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/macbook/projetos/volanty/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Results from'../calculator/Results';import SelectBox from'./SelectBox';import'../../App.scss';import mock from'../../mock.json';var endpoint='http://fipeapi.appspot.com/api/1/carros';var CalculatorForm=/*#__PURE__*/function(_Component){_inherits(CalculatorForm,_Component);function CalculatorForm(props){var _this;_classCallCheck(this,CalculatorForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(CalculatorForm).call(this,props));_this.state={brands:[],models:[],years:[],brand:'',model:'',year:'',selectedCar:false};_this.onSelectBrand=_this.onSelectBrand.bind(_assertThisInitialized(_this));_this.onSelectModel=_this.onSelectModel.bind(_assertThisInitialized(_this));_this.onSelectYear=_this.onSelectYear.bind(_assertThisInitialized(_this));_this.updateimage=_this.updateimage.bind(_assertThisInitialized(_this));return _this;}_createClass(CalculatorForm,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var initialBrands=[];fetch(\"\".concat(endpoint,\"/marcas.json\")).then(function(response){return response.json();}).then(function(data){initialBrands=data.map(function(brand){return brand;});_this2.setState({brands:initialBrands});}).catch(function(error){console.log('API indisponível!');console.error(error);initialBrands=mock.brands.map(function(brand){return brand;});_this2.setState({brands:initialBrands});});}},{key:\"updateimage\",value:function updateimage(){var keys=[];if(this.state.brand!==''){var brand=this.state.brand;var brands=this.state.brands;var brandObj=brands.find(function(b){return parseInt(b.id)===parseInt(brand);});keys.push(brandObj.fipe_name);}if(this.state.model!==''){var model=this.state.model;var models=this.state.models;var modelObj=models.find(function(m){return parseInt(m.id)===parseInt(model);});keys.push(modelObj.fipe_name.split(' ')[0]);}if(this.state.year!==''){var year=this.state.year;var years=this.state.years;var yearObj=years.find(function(y){return parseInt(y.id)===parseInt(year);});keys.push(yearObj.name.split(' ')[0]);}this.props.onUpdateSelection(keys);}},{key:\"onSelectBrand\",value:function onSelectBrand(event){var _this3=this;var selectedBrand=event.target.value;if(selectedBrand===''){this.setState({selectedCar:false,brand:'',models:[],model:'',years:[],year:''});return false;}var models=[];this.setState({brand:selectedBrand,models:[],model:'',years:[],year:'',selectedCar:false});fetch(\"\".concat(endpoint,\"/carros/veiculos/\").concat(selectedBrand,\".json\")).then(function(response){return response.json();}).then(function(data){models=data.map(function(model){return model;});_this3.setState({models:models});_this3.updateimage();}).catch(function(error){console.log('API indisponível!');console.error(error);models=mock.models.map(function(model){return model;});_this3.setState({models:models});_this3.updateimage();}).finally(function(){var element=document.querySelector(\".SelectBox:last-child\");element.scrollIntoView({behavior:'smooth'});});}},{key:\"onSelectModel\",value:function onSelectModel(event){var _this4=this;var selectedModel=event.target.value;if(selectedModel===''){this.setState({model:'',year:'',years:[],selectedCar:false});return false;}var selectedBrand=this.state.brand;var years=[];this.setState({model:selectedModel,years:[],year:'',selectedCar:false});fetch(\"\".concat(endpoint,\"/carros/veiculo/\").concat(selectedBrand,\"/\").concat(selectedModel,\".json\")).then(function(response){return response.json();}).then(function(data){years=data.map(function(year){return year;});_this4.setState({years:years});_this4.updateimage();}).catch(function(error){console.log('API indisponível!');console.error(error);years=mock.years.map(function(year){return year;});_this4.setState({years:years});_this4.updateimage();}).finally(function(){var element=document.querySelector(\".SelectBox:last-child\");element.scrollIntoView({behavior:'smooth'});});}},{key:\"onSelectYear\",value:function onSelectYear(event){var _this5=this;var selectedYear=event.target.value;if(selectedYear===''){this.setState({year:'',selectedCar:false});return false;}var selectedBrand=this.state.brand;var selectedModel=this.state.model;this.setState({year:selectedYear});fetch(\"\".concat(endpoint,\"/carros/veiculo/\").concat(selectedBrand,\"/\").concat(selectedModel,\"/\").concat(selectedYear,\".json\")).then(function(response){return response.json();}).then(function(data){if(!data)return false;_this5.setState({selectedCar:data});_this5.updateimage();}).catch(function(error){console.log('API indisponível!');console.error(error);_this5.setState({selectedCar:mock.result});_this5.updateimage();});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"CalculatorForm\"},React.createElement(\"form\",null,React.createElement(SelectBox,{label:\"Marca\",options:this.state.brands,onChangeEvent:this.onSelectBrand}),this.state.models.length>0?React.createElement(SelectBox,{label:\"Modelo\",options:this.state.models,onChangeEvent:this.onSelectModel}):null,this.state.years.length>0?React.createElement(SelectBox,{label:\"Ano\",options:this.state.years,onChangeEvent:this.onSelectYear}):null),this.state.selectedCar?React.createElement(Results,{showSelectedCar:this.state.selectedCar}):null);}}]);return CalculatorForm;}(Component);export default CalculatorForm;","map":{"version":3,"sources":["/Users/macbook/projetos/volanty/src/components/card/CalculatorForm.js"],"names":["React","Component","Results","SelectBox","mock","endpoint","CalculatorForm","props","state","brands","models","years","brand","model","year","selectedCar","onSelectBrand","bind","onSelectModel","onSelectYear","updateimage","initialBrands","fetch","then","response","json","data","map","setState","catch","error","console","log","keys","brandObj","find","b","parseInt","id","push","fipe_name","modelObj","m","split","yearObj","y","name","onUpdateSelection","event","selectedBrand","target","value","finally","element","document","querySelector","scrollIntoView","behavior","selectedModel","selectedYear","result","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Results from '../calculator/Results'\nimport SelectBox from './SelectBox'\nimport '../../App.scss'\nimport mock from '../../mock.json'\n\nconst endpoint = 'http://fipeapi.appspot.com/api/1/carros'\n\nclass CalculatorForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            brands: [],\n            models: [],\n            years: [],\n            brand: '',\n            model: '',\n            year: '',\n            selectedCar: false\n        }\n\n        this.onSelectBrand = this.onSelectBrand.bind(this);\n        this.onSelectModel = this.onSelectModel.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n        this.updateimage = this.updateimage.bind(this);\n    }\n\n    componentDidMount() {\n        let initialBrands = [];\n        fetch(`${endpoint}/marcas.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                initialBrands = data.map((brand) => {\n                    return brand\n                });\n                this.setState({\n                    brands: initialBrands,\n                });\n            }).catch((error) => {\n                console.log('API indisponível!')\n                console.error(error)\n                initialBrands = mock.brands.map((brand) => {\n                    return brand\n                });\n                this.setState({\n                    brands: initialBrands,\n                });\n            })\n    }\n\n    updateimage() {\n        let keys = []\n        if(this.state.brand !== '') {\n            const brand = this.state.brand\n            const brands = this.state.brands\n            const brandObj = brands.find(b => parseInt(b.id) === parseInt(brand));\n            keys.push(brandObj.fipe_name)\n        }\n        if(this.state.model !== '') {\n            const model = this.state.model\n            const models = this.state.models\n            const modelObj = models.find(m => parseInt(m.id) === parseInt(model));\n            keys.push(modelObj.fipe_name.split(' ')[0])\n        }\n        if(this.state.year !== '') {\n            const year = this.state.year\n            const years = this.state.years\n            const yearObj = years.find(y => parseInt(y.id) === parseInt(year));\n            keys.push(yearObj.name.split(' ')[0])\n        }\n        this.props.onUpdateSelection(keys);\n    }\n\n    onSelectBrand(event) {\n        let selectedBrand = event.target.value\n\n        if(selectedBrand === '') {\n            this.setState({selectedCar: false, brand: '', models: [], model: '', years: [], year: ''})\n            return false\n        }\n        let models = []\n\n        this.setState({brand: selectedBrand, models: [], model: '', years: [], year: '', selectedCar: false})\n        \n        fetch(`${endpoint}/carros/veiculos/${selectedBrand}.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                models = data.map((model) => {\n                    return model\n                });\n                this.setState({models: models});\n                this.updateimage()\n            }).catch(error => {\n                console.log('API indisponível!')\n                console.error(error)\n                models = mock.models.map((model) => {\n                    return model\n                });\n                this.setState({models: models});\n                this.updateimage()\n            }).finally(()=> {\n                let element = document.querySelector(\".SelectBox:last-child\")\n                element.scrollIntoView({ behavior: 'smooth'})\n            })\n    }\n\n    onSelectModel(event) {\n        let selectedModel = event.target.value\n        if(selectedModel === '') {\n            this.setState({model: '', year: '', years: [], selectedCar: false})\n            return false\n        }\n\n        let selectedBrand = this.state.brand\n        let years = []\n\n        this.setState({model: selectedModel, years: [], year: '', selectedCar: false})\n        \n        fetch(`${endpoint}/carros/veiculo/${selectedBrand}/${selectedModel}.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                years = data.map((year) => {\n                    return year\n                });\n                this.setState({years: years})\n                this.updateimage()\n            }).catch(error => {\n                console.log('API indisponível!')\n                console.error(error)\n                years = mock.years.map((year) => {\n                    return year\n                });\n                this.setState({years: years})\n                this.updateimage()\n            }).finally(()=> {\n                let element = document.querySelector(\".SelectBox:last-child\")\n                element.scrollIntoView({ behavior: 'smooth'})\n            })\n    }\n\n    onSelectYear(event) {\n        let selectedYear = event.target.value\n        if(selectedYear === '') {\n            this.setState({year: '', selectedCar: false})\n            return false\n        }\n\n        let selectedBrand = this.state.brand\n        let selectedModel = this.state.model\n\n        this.setState({year: selectedYear})\n        \n        fetch(`${endpoint}/carros/veiculo/${selectedBrand}/${selectedModel}/${selectedYear}.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                if(!data) return false\n                this.setState({selectedCar: data})\n                this.updateimage()\n            }).catch(error => {\n                console.log('API indisponível!')\n                console.error(error)\n                this.setState({selectedCar: mock.result})\n                this.updateimage()\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"CalculatorForm\">\n                <form>\n                    <SelectBox label=\"Marca\" options={this.state.brands} onChangeEvent={this.onSelectBrand}/>\n                    {this.state.models.length > 0? <SelectBox label=\"Modelo\" options={this.state.models} onChangeEvent={this.onSelectModel}/> : null}\n                    {this.state.years.length > 0? <SelectBox label=\"Ano\" options={this.state.years} onChangeEvent={this.onSelectYear}/> : null}\n                </form>\n                { this.state.selectedCar ? <Results showSelectedCar={this.state.selectedCar} /> : null }\n            </div>\n        );\n    }\n}\n\nexport default CalculatorForm;\n"]},"metadata":{},"sourceType":"module"}