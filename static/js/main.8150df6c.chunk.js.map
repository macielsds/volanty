{"version":3,"sources":["arrow.svg","components/card/Badge.js","components/calculator/Results.js","components/card/SelectBox.js","components/card/CalculatorForm.js","components/card/Card.js","components/calculator/Calculator.js","serviceWorker.js","index.js"],"names":["module","exports","imageDefault","Badge","props","state","imageURL","this","keywords","getCarImage","prevProps","keyword","undefined","fetch","then","response","text","str","window","DOMParser","parseFromString","data","srcTag","getElementsByTagName","src","childNodes","setState","nodeValue","className","alt","Component","Results","referencia","fipe_codigo","name","combustivel","marca","ano_modelo","preco","key","time","veiculo","id","showSelectedCar","SelectBox","value","onChangeEvent","options","map","option","label","onChange","arrow","endpoint","CalculatorForm","brands","models","years","brand","model","year","selectedCar","onSelectBrand","bind","onSelectModel","onSelectYear","updateimage","initialBrands","json","keys","brandObj","find","b","parseInt","push","fipe_name","modelObj","m","split","yearObj","y","onUpdateSelection","event","selectedBrand","target","selectedModel","selectedYear","length","Card","updateSelection","keywordString","join","replace","Calculator","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8150df6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.cdfdf297.svg\";","import React, {Component} from 'react';\nimport '../../App.scss'\n\nconst endpoint = '//www.carimagery.com/api.asmx/GetImageUrl?searchTerm='\nconst imageDefault = 'http://denrakaev.com/wp-content/uploads/2015/03/no-image-800x511.png'\n\nclass Badge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageURL: imageDefault\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.keywords !== '') {\n            this.getCarImage(this.props.keywords)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.keywords !== prevProps.keywords) {\n            if (this.props.keywords !== '') {\n                this.getCarImage(this.props.keywords)\n            }\n        }\n    }\n\n    getCarImage(keyword) {\n        if(keyword === '' || keyword === undefined) return false\n\n        fetch(endpoint + keyword)\n            .then(response => response.text())\n            .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n            .then(data => {\n                let srcTag = data.getElementsByTagName(\"string\")[0] || false\n                let src = (srcTag) ? srcTag.childNodes[0] : false\n                if(src) {\n                    this.setState({imageURL: src.nodeValue})\n                }\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"Badge\">\n                <figure className=\"Badge__box\">\n                    <img className=\"Badge__image\" alt='' src={this.state.imageURL}/>\n                </figure>\n            </div>\n        );\n    }\n}\n\nexport default Badge;\n","import React, {Component} from 'react';\nimport '../../App.scss'\n\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            referencia: '',\n            fipe_codigo: '',\n            name: '',\n            combustivel: '',\n            marca: '',\n            ano_modelo: '',\n            preco: '',\n            key: '',\n            time: '',\n            veiculo: '',\n            id: ''\n        }\n    }\n\n    componentDidMount() {\n        let showSelectedCar = this.props.showSelectedCar\n\n        if(showSelectedCar) {\n            this.setState({\n                fipe_codigo: showSelectedCar.fipe_codigo,\n                name: showSelectedCar.name,\n                combustivel: showSelectedCar.combustivel,\n                marca: showSelectedCar.marca,\n                ano_modelo: showSelectedCar.ano_modelo,\n                preco: showSelectedCar.preco,\n                key: showSelectedCar.key,\n                time: showSelectedCar.time,\n                id: showSelectedCar.id\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if ((this.props.showSelectedCar.key !== prevProps.showSelectedCar.key) || !prevProps.showSelectedCar) {\n            let showSelectedCar = this.props.showSelectedCar\n\n            this.setState({\n                fipe_codigo: showSelectedCar.fipe_codigo,\n                name: showSelectedCar.name,\n                combustivel: showSelectedCar.combustivel,\n                marca: showSelectedCar.marca,\n                ano_modelo: showSelectedCar.ano_modelo,\n                preco: showSelectedCar.preco,\n                key: showSelectedCar.key,\n                time: showSelectedCar.time,\n                id: showSelectedCar.id\n            })\n        }\n    }\n\n    render() {\n        return (\n          <div className=\"Results\">\n              <h2>Encontramos o seu carro!</h2>\n              <table className=\"Results__table\">\n                  <tbody>\n                        <tr><th>Código FIPE:</th><td>{this.state.fipe_codigo}</td></tr>\n                        <tr><th>Nome:</th><td>{this.state.name}</td></tr>\n                        <tr><th>Combustível:</th><td>{this.state.combustivel}</td></tr>\n                        <tr><th>Marca:</th><td>{this.state.marca}</td></tr>\n                        <tr><th>Ano Modelo:</th><td>{this.state.ano_modelo}</td></tr>\n                        <tr><th>Preço:</th><td>{this.state.preco}</td></tr>\n                  </tbody>\n              </table>\n          </div>\n        );\n    }\n}\n\nexport default Results;\n","import React, {Component} from 'react';\nimport arrow from '../..//arrow.svg';\nimport '../../App.scss'\n\nclass SelectBox extends Component {\n\n    onChange(value) {\n        this.props.onChangeEvent(value)\n    }\n\n    render() {\n        let options = this.props.options.map((option) =>\n                <option key={option.id} value={option.id}>{option.name}</option>\n            );\n        return (\n            <div className=\"SelectBox\">\n                <label>{this.props.label}:</label>\n                <div className=\"select-box\">\n                    <select onChange={this.onChange}>\n                        <option value=''>Selecione</option>\n                        {options}\n                    </select>\n                    <img src={arrow} className=\"select-arrow\" alt=\"arrow\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SelectBox;\n","import React, {Component} from 'react';\nimport Results from '../calculator/Results'\nimport SelectBox from './SelectBox'\nimport '../../App.scss'\n\nconst endpoint = 'http://fipeapi.appspot.com/api/1/carros/'\n\nclass CalculatorForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            brands: [],\n            models: [],\n            years: [],\n            brand: '',\n            model: '',\n            year: '',\n            selectedCar: false\n        }\n\n        this.onSelectBrand = this.onSelectBrand.bind(this);\n        this.onSelectModel = this.onSelectModel.bind(this);\n        this.onSelectYear = this.onSelectYear.bind(this);\n        this.updateimage = this.updateimage.bind(this);\n    }\n\n    componentDidMount() {\n        let initialBrands = [];\n        fetch(`${endpoint}/marcas.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                initialBrands = data.map((brand) => {\n                    return brand\n                });\n                this.setState({\n                    brands: initialBrands,\n                });\n            });\n    }\n\n    updateimage() {\n        let keys = []\n        if(this.state.brand !== '') {\n            const brand = this.state.brand\n            const brands = this.state.brands\n            const brandObj = brands.find(b => parseInt(b.id) === parseInt(brand));\n            keys.push(brandObj.fipe_name)\n        }\n        if(this.state.model !== '') {\n            const model = this.state.model\n            const models = this.state.models\n            const modelObj = models.find(m => parseInt(m.id) === parseInt(model));\n            keys.push(modelObj.fipe_name.split(' ')[0])\n        }\n        if(this.state.year !== '') {\n            const year = this.state.year\n            const years = this.state.years\n            const yearObj = years.find(y => parseInt(y.id) === parseInt(year));\n            keys.push(yearObj.name.split(' ')[0])\n        }\n        this.props.onUpdateSelection(keys);\n    }\n\n    onSelectBrand(event) {\n        let selectedBrand = event.target.value\n\n        if(selectedBrand === '') {\n            this.setState({selectedCar: false, brand: '', models: [], model: '', years: [], year: ''})\n            return false\n        }\n        let models = []\n\n        this.setState({brand: selectedBrand, models: [], model: '', years: [], year: '', selectedCar: false})\n        \n        fetch(`${endpoint}/carros/veiculos/${selectedBrand}.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                models = data.map((model) => {\n                    return model\n                });\n                this.setState({models: models});\n                this.updateimage()\n            });\n    }\n\n    onSelectModel(event) {\n        let selectedModel = event.target.value\n        if(selectedModel === '') {\n            this.setState({model: '', year: '', years: [], selectedCar: false})\n            return false\n        }\n\n        let selectedBrand = this.state.brand\n        let years = []\n\n        this.setState({model: selectedModel, years: [], year: '', selectedCar: false})\n        \n        fetch(`${endpoint}/carros/veiculo/${selectedBrand}/${selectedModel}.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                years = data.map((year) => {\n                    return year\n                });\n                this.setState({years: years})\n                this.updateimage()\n            });\n    }\n\n    onSelectYear(event) {\n        let selectedYear = event.target.value\n        if(selectedYear === '') {\n            this.setState({year: '', selectedCar: false})\n            return false\n        }\n\n        let selectedBrand = this.state.brand\n        let selectedModel = this.state.model\n\n        this.setState({year: selectedYear})\n        \n        fetch(`${endpoint}/carros/veiculo/${selectedBrand}/${selectedModel}/${selectedYear}.json`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                if(!data) return false\n                this.setState({selectedCar: data})\n                this.updateimage()\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"CalculatorForm\">\n                <form>\n                    <SelectBox label=\"Marca\" options={this.state.brands} onChangeEvent={this.onSelectBrand}/>\n                    {this.state.models.length > 0? <SelectBox label=\"Modelo\" options={this.state.models} onChangeEvent={this.onSelectModel}/> : null}\n                    {this.state.years.length > 0? <SelectBox label=\"Ano\" options={this.state.years} onChangeEvent={this.onSelectYear}/> : null}\n                </form>\n                { this.state.selectedCar ? <Results showSelectedCar={this.state.selectedCar} /> : null }\n            </div>\n        );\n    }\n}\n\nexport default CalculatorForm;\n","import React, {Component} from 'react';\nimport Badge from './Badge'\nimport CalculatorForm from './CalculatorForm'\nimport '../../App.scss'\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            keywords: ''\n        }\n\n        this.updateSelection = this.updateSelection.bind(this);\n    }\n\n    updateSelection(keywords) {\n      let keywordString = keywords.join('+').replace(/ /g, '+')\n      this.setState({\n        keywords: keywordString\n      })\n    }\n\n    render() {\n        return (\n          <div className=\"Card\">\n            <header className=\"Card-header\">\n                <Badge keywords={this.state.keywords}/>\n            </header>\n            <CalculatorForm onUpdateSelection={this.updateSelection}/>\n          </div>\n        );\n    }\n}\n\nexport default Card;\n","import React from 'react'\nimport Card from '../card/Card'\nimport '../../App.scss'\n\nfunction Calculator() {\n  return (\n    <div className=\"Calculator\">\n        <h1>Quanto vale meu carro?</h1>\n        <p>Descubra aqui por quanto seu carro pode ser vendido.</p>\n        <Card/>\n        <small>Desenvolvido por Vinícius Rocha</small>\n    </div>\n  );\n}\n\nexport default Calculator;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './components/calculator/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}